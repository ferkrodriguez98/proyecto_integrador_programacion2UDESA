<% if (review.length == 0) { %>
<div class="w-1/4 mx-auto rounded shadowx-l p-6 mb-12 text-center bg-white">
	No reviews made by this user
</div>
<% } %>
<% for( let i = 0; i < review.length; i++ ) { %>
<div class="w-11/12 md:w-3/4 lg:w-1/2 mx-auto rounded shadow-xl my-6 p-6 text-left bg-white reviews-container" data-serie-id="<%= review[i].series_id %>">
	<div class="w-full text-2xl mb-2 italic">
		<a href="/users/<%= review[i].user.username %>">
			<%= review[i].user.username %>
		</a>
	</div>
	<div class="justify-between flex w-full">
		<div class="pb-2 font-bold text-md series_title">

		</div>
		<div class="pb-2 font-bold text-md series_rating">
			average rating:
		</div>
	</div>
	<div class="pb-2 font-bold text-md series_genre">

	</div>
	<div class="pb-4 font-bold">
		<% if (review[i].rating == 0 || review[i].rating > 10) { %>
		<i class="fas fa-star" style="color: #fffb00;"></i>
		<% } else { %> <% for( let j = 0; j < (review[i].rating / 2); j++ ) { %>
		<i class="fas fa-star" style="color: #fffb00;"></i>
		<% } %> <% } %>
	</div>
	<div class="pb-2 text-justify">
		<%= review[i].series_review %>
	</div>
	<div class="pb-2 text-right text-xs">
		created <%= moment(review[i].createdAt).format('Do MMM YYYY h:mm a') %>
	</div>
	<div class="pb-2 text-right text-xs">
        updated <%= moment(review[i].updatedAt).format('Do MMM YYYY h:mm a') %>
	</div>
	<!-- <div class="pt-4 text-right">
       <form action="/reviews/delete/<%= review[i].id %>" method="POST">
          <a href="/reviews/edit/<%= review[i].id %>" class="inline-block bg-blue-500 hover:bg-blue-700 text-white text-md font-bold py-2 px-4 mx-1 rounded">
             Edit
          </a>
          <a class="modal-open inline-block bg-red-500 hover:bg-red-700 text-white text-md font-bold py-2 px-4 mx-1 rounded">
             Delete
          </a> -->
	<!-- <div class="modal opacity-0 pointer-events-none fixed w-full h-full top-0 left-0 flex items-center justify-center">
             <div class="modal-overlay absolute w-full h-full bg-gray-900 opacity-50"></div>
             
             <div class="modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto">
         
               <div class="modal-content py-4 text-left px-6">
                 <div class="flex justify-between items-center pb-3">
                   <p class="text-2xl font-black">Are you sure?</p>
                   <div class="modal-close cursor-pointer z-50">
                     <svg class="fill-current text-black" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
                       <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
                     </svg>
                   </div>
                 </div>
         
                 <p>Once you delete your review you can't recover it.</p>
         
                 <div class="flex justify-end pt-4">
                   <%= review[i].id %>
                   <button type="submit" class="modal-open inline-block bg-red-500 hover:bg-red-700 text-white text-md font-bold py-2 px-4 mx-1 rounded">
                      Yes, delete it!
                   </button>
                 </div>
                 
               </div>
             </div>
          </div> -->
	<!-- </form>
	</div> -->
</div>
<% } %>
<script>
	  // window.onload = function () {
		var poster = "https://image.tmdb.org/t/p/original/";
		var key = "e59c94a503ea78e9502aa8e308f21eb5";

		containers = document.querySelectorAll('.reviews-container');

		let series_id = [];

		for (let i = 0; i < containers.length; i++) {
			series_id.push(containers[i].dataset.serieId)
		}

		console.log(series_id)

		let series_api_url = [];

		for (let i = 0; i < series_id.length; i++) {
			series_api_url.push("https://api.themoviedb.org/3/tv/" + series_id[i] + "?api_key=" + key + "&language=en-US&page=1")
		}

		console.log(series_api_url)

		// reviews = review.map(async function(review) {
		   
		//    let results = await fetch(series)
		//       return results.json();
		//    }
		// )

		for (let i = 0; i < series_api_url.length; i++) {
			fetch(series_api_url[i], {
				method: "GET",
			})
			.then(function (response) {
				return response.json();
			})
			.then(function (data) {
				var title = document.querySelectorAll(".series_title");
				title[i].innerHTML = '<a href="/series/detail/' + series_id[i] + '"><h1 class="text-2xl font-bold">' + data.name + '</h1></a>';

				var rating = document.querySelectorAll(".series_rating");
				if (data.vote_average != 0) {
					for (j = 0; j < Math.round(data.vote_average / 2); j++) {
						rating[i].innerHTML += '<i class="fas fa-star mt-1" style="color: #fffb00;"></i>';
					}
				} else {
					rating[i].innerHTML += '?';
				}
				// if (data.vote_average != null) {
				// 	for (i = 0; i < score; i++) {
				// 		rating[i].innerHTML += '<i class="fas fa-star mt-1" style="color: #fffb00;"></i>';
				// 	}
				// } else {
				// 	rating[i].innerHTML += ' unknown';
				// }

				// var poster = document.querySelector(".series_poster");
				// poster.innerHTML = '<img src="https://image.tmdb.org/t/p/original/' + data.backdrop_path + '"/>';

				var genre = document.querySelectorAll(".series_genre");
				if (data.genres[0] != null) {
					genre[i].innerHTML = '<h3 class="text-md py-1"> Category: ' + data.genres[0].name  + '</h3>';
				} else {
					genre[i].innerHTML = '<h3 class="text-md py-1"> Category: ? </h3>';
				}

				// var overview = document.querySelector(".series_overview");
				// overview.innerHTML = '<p class="text-sm px-4 sm:px-8 md:px-16 lg:px-24 text-justify">' + data.overview + '</p>';
			})
			.catch(function (error) {
				console.log("El error es: " + error);
			});
		}
	//   }
</script>
